순차 탐색 : 리스트 안에 있는 특정한 데이터를 찾기 위해 앞에서부터 데이터를 하나씩 차례대로 확인하는 방법
보통 정렬되지 않은 리스트에서 데이터를 찾아야 할 때 사용
원하는 데이터를 찾을 때 까지 리스트 내에서 순차적으로 이동하면서 찾는 탐색.

이진 탐색 : 정렬된 배열에서만 사용.
탐색 범위를 절반씩 좁혀가며 데이터를 탐색. 
위치를 나타내는 변수 3개 사용 = 시작점, 끝점, 중간점
★찾으려는 데이터와 중간점 위치에 있는 데이터를 반복적으로 비교해서. 원하는 데이터 찾기
-중간점에 해당하는 값과 찾으려는 값을 비교. - 끝점(또는 시작점)의 위치를 조정(중간점은 탐색범위에서 제외) - 조정된 범위에서 다시 중간점을 설정
-처음 과정을 다시 반복 - 바뀐 시작점(또는 끝점)의 값이 찾으려는 값과 동일해지면 탐색을 종료
이진 탐색의 구현 방법 : 1. 재귀함수 2. 반복문

그리디 알고리즘 + 이진 탐색 알고리즘 -> 난이도↑


트리 자료 구조(ex. 데이터베이스)
노드와 노드의 연결로 표현(노드 : 정보의 단위. 정보를 가지고 있는 개체)
트리는 부모 노드와 자식 노드의 관계로 표현
트리의 최상단 노드를 루트 노드라고 함
트리의 최하단 노드를 단말 노드라고 함
트리에서 일부를 떼어내도 트리구조이며 이를 서브 트리라고 한다.
트리는 파일 시스템과 같이 계층적이고 정렬된 데이터를 다루기에 적합


이진 탐색 트리 특징: (왼쪽 자식 노드 < 부모 노드 < 오른쪽 자식 노드)
부모 노드보다 왼쪽 자식 노드가 작다
부모 노드 보다 오른쪽 자식 노드가 크다
- 루트 노드 방문 - 찾는값에 따라 왼쪽(루트 > 찾는값) 또는 오른쪽(루트 < 찾는값)으로 이동.(반대편은 버림)
다음 노드에 방문한 뒤 처음 과정부터 다시 반복.

입력 데이터의 갯수가 많을 때 : input()대신 sys 라이브러리의 readline()함수 이용
input_data = sys.stdin.readline().rstrip()
readline으로 입력하면 입력 후 엔터가 줄 바꿈 기호로 입력됨.
이 공백 문자를 제거하기 위해 rstrip() 함수를 사용 